// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QuestionnairesForm container renders QuestionnaireForm component 1`] = `
<ReduxForm
  onSubmit={[Function]}
/>
`;

exports[`QuestionnairesForm container renders without crashing 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(QuestionnaireFormContainer)
    createQuestionnaire={[Function]}
  >
    <QuestionnaireFormContainer
      createQuestionnaire={[Function]}
    >
      <div>
        <ReduxForm
          onSubmit={[Function]}
        >
          <Connect(Form(Component))
            destroyOnUnmount={true}
            enableReinitialize={false}
            forceUnregisterOnUnmount={false}
            form="QuestionnaireForm"
            getFormState={[Function]}
            keepDirtyOnReinitialize={false}
            onSubmit={[Function]}
            persistentSubmitErrors={false}
            pure={true}
            shouldAsyncValidate={[Function]}
            shouldValidate={[Function]}
            touchOnBlur={true}
            touchOnChange={false}
            validate={[Function]}
          >
            <Form(Component)
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              arrayInsert={[Function]}
              arrayMove={[Function]}
              arrayPop={[Function]}
              arrayPush={[Function]}
              arrayRemove={[Function]}
              arrayRemoveAll={[Function]}
              arrayShift={[Function]}
              arraySplice={[Function]}
              arraySwap={[Function]}
              arrayUnshift={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              change={[Function]}
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              destroy={[Function]}
              destroyOnUnmount={true}
              dirty={false}
              dispatch={[Function]}
              enableReinitialize={false}
              focus={[Function]}
              forceUnregisterOnUnmount={false}
              form="QuestionnaireForm"
              getFormState={[Function]}
              initialize={[Function]}
              initialized={false}
              invalid={true}
              keepDirtyOnReinitialize={false}
              onSubmit={[Function]}
              persistentSubmitErrors={false}
              pristine={true}
              pure={true}
              registerField={[Function]}
              registeredFields={
                Object {
                  "questions": Object {
                    "count": 1,
                    "name": "questions",
                    "type": "FieldArray",
                  },
                  "title": Object {
                    "count": 1,
                    "name": "title",
                    "type": "Field",
                  },
                }
              }
              reset={[Function]}
              setSubmitFailed={[Function]}
              setSubmitSucceeded={[Function]}
              shouldAsyncValidate={[Function]}
              shouldValidate={[Function]}
              startAsyncValidation={[Function]}
              startSubmit={[Function]}
              stopAsyncValidation={[Function]}
              stopSubmit={[Function]}
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              syncErrors={
                Object {
                  "questions": Object {
                    "_error": "At least one question must be entered",
                  },
                  "title": "Required",
                }
              }
              syncWarnings={Object {}}
              touch={[Function]}
              touchOnBlur={true}
              touchOnChange={false}
              unregisterField={[Function]}
              untouch={[Function]}
              updateSyncErrors={[Function]}
              updateSyncWarnings={[Function]}
              valid={false}
              validExceptSubmit={false}
              validate={[Function]}
              values={Object {}}
            >
              <Component
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                change={[Function]}
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                destroy={[Function]}
                dirty={false}
                dispatch={[Function]}
                form="QuestionnaireForm"
                handleSubmit={[Function]}
                initialize={[Function]}
                initialized={false}
                invalid={true}
                onSubmit={[Function]}
                pristine={true}
                pure={true}
                reset={[Function]}
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                untouch={[Function]}
                valid={false}
                validate={[Function]}
              >
                <div
                  className="container"
                >
                  <form
                    className="container"
                    onSubmit={[Function]}
                  >
                    <h2
                      className="text-center"
                    >
                      Create Questionnaire
                    </h2>
                    <Field
                      component={[Function]}
                      label="Questionnaire Title"
                      name="title"
                      type="text"
                    >
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "QuestionnaireForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": true,
                            "keepDirtyOnReinitialize": false,
                            "onSubmit": [Function],
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": Object {
                              "questions": Object {
                                "count": 1,
                                "name": "questions",
                                "type": "FieldArray",
                              },
                              "title": Object {
                                "count": 1,
                                "name": "title",
                                "type": "Field",
                              },
                            },
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {
                              "questions": Object {
                                "_error": "At least one question must be entered",
                              },
                              "title": "Required",
                            },
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": false,
                            "validExceptSubmit": false,
                            "validate": [Function],
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        label="Questionnaire Title"
                        name="title"
                        normalize={[Function]}
                        type="text"
                      >
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "QuestionnaireForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": true,
                              "keepDirtyOnReinitialize": false,
                              "onSubmit": [Function],
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": Object {
                                "questions": Object {
                                  "count": 1,
                                  "name": "questions",
                                  "type": "FieldArray",
                                },
                                "title": Object {
                                  "count": 1,
                                  "name": "title",
                                  "type": "Field",
                                },
                              },
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {
                                "questions": Object {
                                  "_error": "At least one question must be entered",
                                },
                                "title": "Required",
                              },
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": false,
                              "validExceptSubmit": false,
                              "validate": [Function],
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          label="Questionnaire Title"
                          name="title"
                          normalize={[Function]}
                          pristine={true}
                          syncError="Required"
                          type="text"
                        >
                          <renderField
                            input={
                              Object {
                                "name": "title",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            label="Questionnaire Title"
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": "Required",
                                "form": "QuestionnaireForm",
                                "initial": undefined,
                                "invalid": true,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": false,
                                "visited": false,
                                "warning": undefined,
                              }
                            }
                            type="text"
                          >
                            <div
                              className="form-group "
                            >
                              <label
                                className="form-control-label"
                              >
                                Questionnaire Title
                              </label>
                              <input
                                className="form-control"
                                name="title"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onDragStart={[Function]}
                                onDrop={[Function]}
                                onFocus={[Function]}
                                placeholder="Questionnaire Title"
                                type="text"
                                value=""
                              />
                              <div
                                className="text-help"
                              />
                            </div>
                          </renderField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                    <FieldArray
                      component={[Function]}
                      name="questions"
                    >
                      <Connect(ConnectedFieldArray)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "QuestionnaireForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": true,
                            "keepDirtyOnReinitialize": false,
                            "onSubmit": [Function],
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": Object {
                              "questions": Object {
                                "count": 1,
                                "name": "questions",
                                "type": "FieldArray",
                              },
                              "title": Object {
                                "count": 1,
                                "name": "title",
                                "type": "Field",
                              },
                            },
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {
                              "questions": Object {
                                "_error": "At least one question must be entered",
                              },
                              "title": "Required",
                            },
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": false,
                            "validExceptSubmit": false,
                            "validate": [Function],
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="questions"
                      >
                        <ConnectedFieldArray
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "QuestionnaireForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": true,
                              "keepDirtyOnReinitialize": false,
                              "onSubmit": [Function],
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": Object {
                                "questions": Object {
                                  "count": 1,
                                  "name": "questions",
                                  "type": "FieldArray",
                                },
                                "title": Object {
                                  "count": 1,
                                  "name": "title",
                                  "type": "Field",
                                },
                              },
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {
                                "questions": Object {
                                  "_error": "At least one question must be entered",
                                },
                                "title": "Required",
                              },
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": false,
                              "validExceptSubmit": false,
                              "validate": [Function],
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          arrayInsert={[Function]}
                          arrayMove={[Function]}
                          arrayPop={[Function]}
                          arrayPush={[Function]}
                          arrayRemove={[Function]}
                          arrayRemoveAll={[Function]}
                          arrayShift={[Function]}
                          arraySplice={[Function]}
                          arraySwap={[Function]}
                          arrayUnshift={[Function]}
                          component={[Function]}
                          dirty={false}
                          length={0}
                          name="questions"
                          pristine={true}
                          rerenderOnEveryChange={false}
                          syncError="At least one question must be entered"
                        >
                          <QuestionFieldArray
                            fields={
                              Object {
                                "_isFieldArray": true,
                                "forEach": [Function],
                                "get": [Function],
                                "getAll": [Function],
                                "insert": [Function],
                                "length": 0,
                                "map": [Function],
                                "move": [Function],
                                "name": "questions",
                                "pop": [Function],
                                "push": [Function],
                                "reduce": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              }
                            }
                            meta={
                              Object {
                                "dirty": false,
                                "error": "At least one question must be entered",
                                "form": "QuestionnaireForm",
                                "invalid": true,
                                "pristine": true,
                                "submitFailed": undefined,
                                "submitting": undefined,
                                "valid": false,
                                "warning": undefined,
                              }
                            }
                          >
                            <div>
                              <div
                                className="form-group"
                              >
                                <button
                                  className="btn btn-outline-info btn-lg"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Add Question
                                </button>
                              </div>
                            </div>
                          </QuestionFieldArray>
                        </ConnectedFieldArray>
                      </Connect(ConnectedFieldArray)>
                    </FieldArray>
                    <div>
                      <button
                        className="btn btn-outline-danger btn-lg btn-block"
                        disabled={true}
                        onClick={[Function]}
                        type="button"
                      >
                        Clear Values
                      </button>
                      <button
                        className="btn btn-outline-success btn-lg btn-lg btn-block"
                        disabled={false}
                        type="submit"
                      >
                        Submit
                      </button>
                    </div>
                  </form>
                </div>
              </Component>
            </Form(Component)>
          </Connect(Form(Component))>
        </ReduxForm>
      </div>
    </QuestionnaireFormContainer>
  </Connect(QuestionnaireFormContainer)>
</Provider>
`;
